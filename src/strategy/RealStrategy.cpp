#include <strategy/RealStrategy.h>
#include "Exceptions.h"
#include <spdlog/spdlog.h>
#include <spdlog/fmt/ostr.h>

std::unique_ptr<Move> RealStrategy::callRaiseOrFold(const float bb, const Board &board)
{
    std::unique_ptr<Move> move;

    //sprawdzic jaka faza gry, na podstawie dostepnych kart?
    //stworzyc odpowiednia strategie: preFlop, flop, turn, river
    //ale nie musi byc za kazdym razem bo jak mamy kolejny ruch do podjecia w tej samej fazie to moze zostac to co bylo

    if (move->isBet())
    {
        spdlog::error("Cannot use {} move generated by strategy, expected call, raise, fold or check for BB!", *move);
        throw WrongPlayerMoveError();
    }

    return move;
}

std::unique_ptr<Move> RealStrategy::checkOrBet(const Board& board)
{
    std::unique_ptr<Move> move;

    //TODO implementaion

    if (move->isRaise() || move->isCall())
    {
        spdlog::error("Cannot use {} move generated by strategy, expected check, bet or fold!", *move);
        throw WrongPlayerMoveError();
    }

    return move;
}
