#include <strategy/RealStrategy.h>
#include "Exceptions.h"
#include <spdlog/spdlog.h>
#include <spdlog/fmt/ostr.h>

std::unique_ptr<Move> RealStrategy::callRaiseOrFold(const float bb)
{
    std::unique_ptr<Move> m;

    //TODO implementation

    if (m->isBet())
    {
        spdlog::error("Cannot use {} move generated by strategy, expected call, raise, fold or check for BB!", *m);
        throw WrongPlayerMoveError();
    }

    return m;
}

std::unique_ptr<Move> RealStrategy::checkOrBet()
{
    std::unique_ptr<Move> m;

    //TODO implementaion

    if (m->isRaise() || m->isCall())
    {
        spdlog::error("Cannot use {} move generated by strategy, expected check, bet or fold!", *m);
        throw WrongPlayerMoveError();
    }

    return m;
}
